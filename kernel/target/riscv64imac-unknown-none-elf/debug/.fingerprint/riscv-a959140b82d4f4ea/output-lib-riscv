{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/asm.rs","byte_start":301,"byte_end":304,"line_start":10,"line_end":10,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!($asm),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/asm.rs","byte_start":1097,"byte_end":1783,"line_start":39,"line_end":47,"column_start":1,"column_end":54,"is_primary":false,"text":[{"text":"instruction!(","highlight_start":1,"highlight_end":14},{"text":"    /// `SFENCE.VMA` instruction wrapper (all address spaces and page table levels)","highlight_start":1,"highlight_end":84},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// Synchronizes updates to in-memory memory-management data structures with current execution.","highlight_start":1,"highlight_end":100},{"text":"    /// Instruction execution causes implicit reads and writes to these data structures; however, these implicit references","highlight_start":1,"highlight_end":124},{"text":"    /// are ordinarily not ordered with respect to loads and stores in the instruction stream.","highlight_start":1,"highlight_end":95},{"text":"    /// Executing an `SFENCE.VMA` instruction guarantees that any stores in the instruction stream prior to the","highlight_start":1,"highlight_end":112},{"text":"    /// `SFENCE.VMA` are ordered before all implicit references subsequent to the `SFENCE.VMA`.","highlight_start":1,"highlight_end":96},{"text":"    , sfence_vma_all, \"sfence.vma\", __sfence_vma_all);","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"instruction!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/asm.rs","byte_start":27,"byte_end":652,"line_start":3,"line_end":26,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! instruction {","highlight_start":1,"highlight_end":27},{"text":"    ($(#[$attr:meta])*, $fnname:ident, $asm:expr, $asm_fn:ident) => (","highlight_start":1,"highlight_end":70},{"text":"        $(#[$attr])*","highlight_start":1,"highlight_end":21},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub unsafe fn $fnname() {","highlight_start":1,"highlight_end":34},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!($asm),","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn();","highlight_start":1,"highlight_end":38},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn();","highlight_start":1,"highlight_end":31},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    )","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/asm.rs:10:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!($asm),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0minstruction!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// `SFENCE.VMA` instruction wrapper (all address spaces and page table levels)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ///\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// Synchronizes updates to in-memory memory-management data structures with current execution.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// `SFENCE.VMA` are ordered before all implicit references subsequent to the `SFENCE.VMA`.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    , sfence_vma_all, \"sfence.vma\", __sfence_vma_all);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____________________________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `instruction` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/asm.rs","byte_start":2504,"byte_end":2507,"line_start":61,"line_end":61,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"        () => asm!(\"sfence.vma {0}, {1}\", in(reg) addr, in(reg) asid),","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/asm.rs:61:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        () => asm!(\"sfence.vma {0}, {1}\", in(reg) addr, in(reg) asid),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/utvec.rs","byte_start":721,"byte_end":753,"line_start":34,"line_end":34,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"write_csr!(0x005, __write_utvec);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/utvec.rs:34:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwrite_csr!(0x005, __write_utvec);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/ucause.rs","byte_start":301,"byte_end":334,"line_start":18,"line_end":18,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"write_csr!(0x042, __write_ucause);","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/ucause.rs:18:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwrite_csr!(0x042, __write_ucause);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/uepc.rs","byte_start":59,"byte_end":99,"line_start":4,"line_end":4,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"write_csr_as_usize!(0x041, __write_uepc);","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/uepc.rs:4:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwrite_csr_as_usize!(0x041, __write_uepc);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/uscratch.rs","byte_start":67,"byte_end":111,"line_start":4,"line_end":4,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"write_csr_as_usize!(0x040, __write_uscratch);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/uscratch.rs:4:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwrite_csr_as_usize!(0x040, __write_uscratch);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/utval.rs","byte_start":61,"byte_end":93,"line_start":4,"line_end":4,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"write_csr!(0x043, __write_utval);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/utval.rs:4:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwrite_csr!(0x043, __write_utval);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5289,"byte_end":5292,"line_start":207,"line_end":207,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/fcsr.rs","byte_start":2057,"byte_end":2084,"line_start":105,"line_end":105,"column_start":1,"column_end":28,"is_primary":false,"text":[{"text":"clear!(0x003, __clear_fcsr);","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"clear!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5001,"byte_end":5705,"line_start":199,"line_end":223,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! clear {","highlight_start":1,"highlight_end":21},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Clear the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _clear(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:207:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/fcsr.rs:105:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mclear!(0x003, __clear_fcsr);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `clear` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/stvec.rs","byte_start":721,"byte_end":753,"line_start":34,"line_end":34,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"write_csr!(0x105, __write_stvec);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/stvec.rs:34:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwrite_csr!(0x105, __write_stvec);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/scause.rs","byte_start":2685,"byte_end":2718,"line_start":118,"line_end":118,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"write_csr!(0x142, __write_scause);","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/scause.rs:118:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwrite_csr!(0x142, __write_scause);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sepc.rs","byte_start":59,"byte_end":99,"line_start":4,"line_end":4,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"write_csr_as_usize!(0x141, __write_sepc);","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sepc.rs:4:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwrite_csr_as_usize!(0x141, __write_sepc);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sscratch.rs","byte_start":67,"byte_end":111,"line_start":4,"line_end":4,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"write_csr_as_usize!(0x140, __write_sscratch);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sscratch.rs:4:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwrite_csr_as_usize!(0x140, __write_sscratch);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/stval.rs","byte_start":61,"byte_end":93,"line_start":4,"line_end":4,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"write_csr!(0x143, __write_stval);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/stval.rs:4:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwrite_csr!(0x143, __write_stval);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/satp.rs","byte_start":2216,"byte_end":2256,"line_start":98,"line_end":98,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"write_csr_as_usize!(0x180, __write_satp);","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/satp.rs:98:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwrite_csr_as_usize!(0x180, __write_satp);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mtvec.rs","byte_start":795,"byte_end":827,"line_start":40,"line_end":40,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"write_csr!(0x305, __write_mtvec);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mtvec.rs:40:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwrite_csr!(0x305, __write_mtvec);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mepc.rs","byte_start":59,"byte_end":99,"line_start":4,"line_end":4,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"write_csr_as_usize!(0x341, __write_mepc);","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mepc.rs:4:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwrite_csr_as_usize!(0x341, __write_mepc);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mscratch.rs","byte_start":67,"byte_end":111,"line_start":4,"line_end":4,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"write_csr_as_usize!(0x340, __write_mscratch);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mscratch.rs:4:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwrite_csr_as_usize!(0x340, __write_mscratch);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":234,"byte_end":269,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":291,"byte_end":347,"line_start":13,"line_end":13,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"reg!(0x3B0, pmpaddr0, __read_pmpaddr0, __write_pmpaddr0);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:13:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3B0, pmpaddr0, __read_pmpaddr0, __write_pmpaddr0);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":234,"byte_end":269,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":349,"byte_end":405,"line_start":14,"line_end":14,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"reg!(0x3B1, pmpaddr1, __read_pmpaddr1, __write_pmpaddr1);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:14:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3B1, pmpaddr1, __read_pmpaddr1, __write_pmpaddr1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":234,"byte_end":269,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":407,"byte_end":463,"line_start":15,"line_end":15,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"reg!(0x3B2, pmpaddr2, __read_pmpaddr2, __write_pmpaddr2);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:15:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3B2, pmpaddr2, __read_pmpaddr2, __write_pmpaddr2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":234,"byte_end":269,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":465,"byte_end":521,"line_start":16,"line_end":16,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"reg!(0x3B3, pmpaddr3, __read_pmpaddr3, __write_pmpaddr3);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:16:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3B3, pmpaddr3, __read_pmpaddr3, __write_pmpaddr3);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":234,"byte_end":269,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":523,"byte_end":579,"line_start":17,"line_end":17,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"reg!(0x3B4, pmpaddr4, __read_pmpaddr4, __write_pmpaddr4);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:17:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3B4, pmpaddr4, __read_pmpaddr4, __write_pmpaddr4);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":234,"byte_end":269,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":581,"byte_end":637,"line_start":18,"line_end":18,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"reg!(0x3B5, pmpaddr5, __read_pmpaddr5, __write_pmpaddr5);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:18:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3B5, pmpaddr5, __read_pmpaddr5, __write_pmpaddr5);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":234,"byte_end":269,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":639,"byte_end":695,"line_start":19,"line_end":19,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"reg!(0x3B6, pmpaddr6, __read_pmpaddr6, __write_pmpaddr6);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:19:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3B6, pmpaddr6, __read_pmpaddr6, __write_pmpaddr6);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":234,"byte_end":269,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":697,"byte_end":753,"line_start":20,"line_end":20,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"reg!(0x3B7, pmpaddr7, __read_pmpaddr7, __write_pmpaddr7);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:20:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3B7, pmpaddr7, __read_pmpaddr7, __write_pmpaddr7);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":234,"byte_end":269,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":755,"byte_end":811,"line_start":21,"line_end":21,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"reg!(0x3B8, pmpaddr8, __read_pmpaddr8, __write_pmpaddr8);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:21:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3B8, pmpaddr8, __read_pmpaddr8, __write_pmpaddr8);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":234,"byte_end":269,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":813,"byte_end":869,"line_start":22,"line_end":22,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"reg!(0x3B9, pmpaddr9, __read_pmpaddr9, __write_pmpaddr9);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:22:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3B9, pmpaddr9, __read_pmpaddr9, __write_pmpaddr9);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":234,"byte_end":269,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":871,"byte_end":930,"line_start":23,"line_end":23,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"reg!(0x3BA, pmpaddr10, __read_pmpaddr10, __write_pmpaddr10);","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:23:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3BA, pmpaddr10, __read_pmpaddr10, __write_pmpaddr10);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":234,"byte_end":269,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":932,"byte_end":991,"line_start":24,"line_end":24,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"reg!(0x3BB, pmpaddr11, __read_pmpaddr11, __write_pmpaddr11);","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:24:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3BB, pmpaddr11, __read_pmpaddr11, __write_pmpaddr11);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":234,"byte_end":269,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":993,"byte_end":1052,"line_start":25,"line_end":25,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"reg!(0x3BC, pmpaddr12, __read_pmpaddr12, __write_pmpaddr12);","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:25:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3BC, pmpaddr12, __read_pmpaddr12, __write_pmpaddr12);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":234,"byte_end":269,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":1054,"byte_end":1113,"line_start":26,"line_end":26,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"reg!(0x3BD, pmpaddr13, __read_pmpaddr13, __write_pmpaddr13);","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:26:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3BD, pmpaddr13, __read_pmpaddr13, __write_pmpaddr13);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":234,"byte_end":269,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":1115,"byte_end":1174,"line_start":27,"line_end":27,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"reg!(0x3BE, pmpaddr14, __read_pmpaddr14, __write_pmpaddr14);","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:27:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3BE, pmpaddr14, __read_pmpaddr14, __write_pmpaddr14);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":234,"byte_end":269,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":1176,"byte_end":1235,"line_start":28,"line_end":28,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"reg!(0x3BF, pmpaddr15, __read_pmpaddr15, __write_pmpaddr15);","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:28:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3BF, pmpaddr15, __read_pmpaddr15, __write_pmpaddr15);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":293,"byte_end":355,"line_start":13,"line_end":13,"column_start":1,"column_end":63,"is_primary":false,"text":[{"text":"reg!(0x323, mhpmevent3, __read_mhpmevent3, __write_mhpmevent3);","highlight_start":1,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:13:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x323, mhpmevent3, __read_mhpmevent3, __write_mhpmevent3);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":357,"byte_end":419,"line_start":14,"line_end":14,"column_start":1,"column_end":63,"is_primary":false,"text":[{"text":"reg!(0x324, mhpmevent4, __read_mhpmevent4, __write_mhpmevent4);","highlight_start":1,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:14:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x324, mhpmevent4, __read_mhpmevent4, __write_mhpmevent4);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":421,"byte_end":483,"line_start":15,"line_end":15,"column_start":1,"column_end":63,"is_primary":false,"text":[{"text":"reg!(0x325, mhpmevent5, __read_mhpmevent5, __write_mhpmevent5);","highlight_start":1,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:15:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x325, mhpmevent5, __read_mhpmevent5, __write_mhpmevent5);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":485,"byte_end":547,"line_start":16,"line_end":16,"column_start":1,"column_end":63,"is_primary":false,"text":[{"text":"reg!(0x326, mhpmevent6, __read_mhpmevent6, __write_mhpmevent6);","highlight_start":1,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:16:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x326, mhpmevent6, __read_mhpmevent6, __write_mhpmevent6);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":549,"byte_end":611,"line_start":17,"line_end":17,"column_start":1,"column_end":63,"is_primary":false,"text":[{"text":"reg!(0x327, mhpmevent7, __read_mhpmevent7, __write_mhpmevent7);","highlight_start":1,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:17:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x327, mhpmevent7, __read_mhpmevent7, __write_mhpmevent7);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":613,"byte_end":675,"line_start":18,"line_end":18,"column_start":1,"column_end":63,"is_primary":false,"text":[{"text":"reg!(0x328, mhpmevent8, __read_mhpmevent8, __write_mhpmevent8);","highlight_start":1,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:18:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x328, mhpmevent8, __read_mhpmevent8, __write_mhpmevent8);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":677,"byte_end":739,"line_start":19,"line_end":19,"column_start":1,"column_end":63,"is_primary":false,"text":[{"text":"reg!(0x329, mhpmevent9, __read_mhpmevent9, __write_mhpmevent9);","highlight_start":1,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:19:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x329, mhpmevent9, __read_mhpmevent9, __write_mhpmevent9);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":741,"byte_end":806,"line_start":20,"line_end":20,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x32A, mhpmevent10, __read_mhpmevent10, __write_mhpmevent10);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:20:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x32A, mhpmevent10, __read_mhpmevent10, __write_mhpmevent10);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":808,"byte_end":873,"line_start":21,"line_end":21,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x32B, mhpmevent11, __read_mhpmevent11, __write_mhpmevent11);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:21:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x32B, mhpmevent11, __read_mhpmevent11, __write_mhpmevent11);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":875,"byte_end":940,"line_start":22,"line_end":22,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x32C, mhpmevent12, __read_mhpmevent12, __write_mhpmevent12);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:22:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x32C, mhpmevent12, __read_mhpmevent12, __write_mhpmevent12);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":942,"byte_end":1007,"line_start":23,"line_end":23,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x32D, mhpmevent13, __read_mhpmevent13, __write_mhpmevent13);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:23:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x32D, mhpmevent13, __read_mhpmevent13, __write_mhpmevent13);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1009,"byte_end":1074,"line_start":24,"line_end":24,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x32E, mhpmevent14, __read_mhpmevent14, __write_mhpmevent14);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:24:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x32E, mhpmevent14, __read_mhpmevent14, __write_mhpmevent14);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1076,"byte_end":1141,"line_start":25,"line_end":25,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x32F, mhpmevent15, __read_mhpmevent15, __write_mhpmevent15);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:25:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x32F, mhpmevent15, __read_mhpmevent15, __write_mhpmevent15);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1143,"byte_end":1208,"line_start":26,"line_end":26,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x330, mhpmevent16, __read_mhpmevent16, __write_mhpmevent16);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:26:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x330, mhpmevent16, __read_mhpmevent16, __write_mhpmevent16);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1210,"byte_end":1275,"line_start":27,"line_end":27,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x331, mhpmevent17, __read_mhpmevent17, __write_mhpmevent17);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:27:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x331, mhpmevent17, __read_mhpmevent17, __write_mhpmevent17);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1277,"byte_end":1342,"line_start":28,"line_end":28,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x332, mhpmevent18, __read_mhpmevent18, __write_mhpmevent18);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:28:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x332, mhpmevent18, __read_mhpmevent18, __write_mhpmevent18);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1344,"byte_end":1409,"line_start":29,"line_end":29,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x333, mhpmevent19, __read_mhpmevent19, __write_mhpmevent19);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:29:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x333, mhpmevent19, __read_mhpmevent19, __write_mhpmevent19);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1411,"byte_end":1476,"line_start":30,"line_end":30,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x334, mhpmevent20, __read_mhpmevent20, __write_mhpmevent20);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:30:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x334, mhpmevent20, __read_mhpmevent20, __write_mhpmevent20);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1478,"byte_end":1543,"line_start":31,"line_end":31,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x335, mhpmevent21, __read_mhpmevent21, __write_mhpmevent21);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:31:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x335, mhpmevent21, __read_mhpmevent21, __write_mhpmevent21);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1545,"byte_end":1610,"line_start":32,"line_end":32,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x336, mhpmevent22, __read_mhpmevent22, __write_mhpmevent22);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:32:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x336, mhpmevent22, __read_mhpmevent22, __write_mhpmevent22);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1612,"byte_end":1677,"line_start":33,"line_end":33,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x337, mhpmevent23, __read_mhpmevent23, __write_mhpmevent23);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:33:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x337, mhpmevent23, __read_mhpmevent23, __write_mhpmevent23);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1679,"byte_end":1744,"line_start":34,"line_end":34,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x338, mhpmevent24, __read_mhpmevent24, __write_mhpmevent24);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:34:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x338, mhpmevent24, __read_mhpmevent24, __write_mhpmevent24);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1746,"byte_end":1811,"line_start":35,"line_end":35,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x339, mhpmevent25, __read_mhpmevent25, __write_mhpmevent25);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:35:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x339, mhpmevent25, __read_mhpmevent25, __write_mhpmevent25);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1813,"byte_end":1878,"line_start":36,"line_end":36,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x33A, mhpmevent26, __read_mhpmevent26, __write_mhpmevent26);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:36:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x33A, mhpmevent26, __read_mhpmevent26, __write_mhpmevent26);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1880,"byte_end":1945,"line_start":37,"line_end":37,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x33B, mhpmevent27, __read_mhpmevent27, __write_mhpmevent27);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:37:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x33B, mhpmevent27, __read_mhpmevent27, __write_mhpmevent27);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1947,"byte_end":2012,"line_start":38,"line_end":38,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x33C, mhpmevent28, __read_mhpmevent28, __write_mhpmevent28);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:38:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x33C, mhpmevent28, __read_mhpmevent28, __write_mhpmevent28);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":2014,"byte_end":2079,"line_start":39,"line_end":39,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x33D, mhpmevent29, __read_mhpmevent29, __write_mhpmevent29);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:39:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x33D, mhpmevent29, __read_mhpmevent29, __write_mhpmevent29);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":2081,"byte_end":2146,"line_start":40,"line_end":40,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x33E, mhpmevent30, __read_mhpmevent30, __write_mhpmevent30);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:40:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x33E, mhpmevent30, __read_mhpmevent30, __write_mhpmevent30);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":236,"byte_end":271,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":2148,"byte_end":2213,"line_start":41,"line_end":41,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x33F, mhpmevent31, __read_mhpmevent31, __write_mhpmevent31);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:41:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x33F, mhpmevent31, __read_mhpmevent31, __write_mhpmevent31);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":3773,"byte_end":3882,"line_start":222,"line_end":228,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB1F,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter31,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter31h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter31,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter31","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:222:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB1F,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter31,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m225\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter31h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m226\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter31,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter31\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m228\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":3662,"byte_end":3771,"line_start":215,"line_end":221,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB1E,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter30,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter30h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter30,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter30","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:215:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m215\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB1E,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m217\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter30,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter30h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter30,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter30\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":3551,"byte_end":3660,"line_start":208,"line_end":214,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB1D,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter29,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter29h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter29,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter29","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:208:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m209\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB1D,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter29,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter29h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter29,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter29\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":3440,"byte_end":3549,"line_start":201,"line_end":207,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB1C,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter28,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter28h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter28,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter28","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:201:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m201\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB1C,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter28,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m204\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter28h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter28,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter28\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":3329,"byte_end":3438,"line_start":194,"line_end":200,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB1B,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter27,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter27h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter27,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter27","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:194:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m194\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m195\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB1B,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter27,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter27h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m198\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter27,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m199\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter27\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":3218,"byte_end":3327,"line_start":187,"line_end":193,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB1A,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter26,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter26h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter26,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter26","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:187:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m187\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB1A,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter26,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m190\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter26h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter26,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter26\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":3107,"byte_end":3216,"line_start":180,"line_end":186,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB19,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter25,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter25h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter25,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter25","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:180:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m180\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB19,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter25,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter25h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter25,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter25\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":2996,"byte_end":3105,"line_start":173,"line_end":179,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB18,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter24,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter24h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter24,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter24","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:173:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB18,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m175\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter24,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m176\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter24h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter24,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter24\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":2885,"byte_end":2994,"line_start":166,"line_end":172,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB17,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter23,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter23h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter23,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter23","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:166:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m167\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB17,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m168\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter23,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m169\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter23h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m170\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter23,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m171\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter23\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":2774,"byte_end":2883,"line_start":159,"line_end":165,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB16,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter22,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter22h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter22,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter22","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:159:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter22,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter22h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter22,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter22\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":2663,"byte_end":2772,"line_start":152,"line_end":158,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB15,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter21,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter21h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter21,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter21","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:152:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m152\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB15,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter21,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter21h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter21,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter21\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":2552,"byte_end":2661,"line_start":145,"line_end":151,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB14,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter20,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter20h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter20,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter20","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:145:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m146\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB14,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter20,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter20h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m149\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter20,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter20\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":2441,"byte_end":2550,"line_start":138,"line_end":144,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB13,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter19,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter19h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter19,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter19","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:138:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m139\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB13,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter19,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter19h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter19,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter19\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":2330,"byte_end":2439,"line_start":131,"line_end":137,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB12,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter18,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter18h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter18,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter18","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:131:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB12,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter18,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter18h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter18,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter18\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":2219,"byte_end":2328,"line_start":124,"line_end":130,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB11,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter17,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter17h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter17,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter17","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:124:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB11,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter17,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter17h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter17,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter17\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":2108,"byte_end":2217,"line_start":117,"line_end":123,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB10,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter16,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter16h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter16,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter16","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:117:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB10,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter16h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter16\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":1997,"byte_end":2106,"line_start":110,"line_end":116,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB0F,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter15,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter15h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter15,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter15","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:110:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB0F,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter15,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter15h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter15,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter15\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":1886,"byte_end":1995,"line_start":103,"line_end":109,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB0E,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter14,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter14h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter14,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter14","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:103:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB0E,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter14,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter14h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter14,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter14\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":1775,"byte_end":1884,"line_start":96,"line_end":102,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB0D,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter13,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter13h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter13,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter13","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:96:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB0D,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter13,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter13h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter13,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter13\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":1664,"byte_end":1773,"line_start":89,"line_end":95,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB0C,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter12,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter12h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter12,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter12","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:89:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB0C,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter12,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter12h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter12,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter12\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":1553,"byte_end":1662,"line_start":82,"line_end":88,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB0B,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter11,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter11h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter11,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter11","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:82:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB0B,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter11,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter11h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter11,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter11\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":1442,"byte_end":1551,"line_start":75,"line_end":81,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB0A,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter10,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter10h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter10,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter10","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:75:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB0A,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m77\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter10,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter10h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter10,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter10\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":1335,"byte_end":1440,"line_start":68,"line_end":74,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB09,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter9,","highlight_start":1,"highlight_end":18},{"text":"    mhpmcounter9h,","highlight_start":1,"highlight_end":19},{"text":"    __read_mhpmcounter9,","highlight_start":1,"highlight_end":25},{"text":"    __write_mhpmcounter9","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:68:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB09,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter9,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter9h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter9,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter9\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":1228,"byte_end":1333,"line_start":61,"line_end":67,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB08,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter8,","highlight_start":1,"highlight_end":18},{"text":"    mhpmcounter8h,","highlight_start":1,"highlight_end":19},{"text":"    __read_mhpmcounter8,","highlight_start":1,"highlight_end":25},{"text":"    __write_mhpmcounter8","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:61:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB08,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter8h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter8\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":1121,"byte_end":1226,"line_start":54,"line_end":60,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB07,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter7,","highlight_start":1,"highlight_end":18},{"text":"    mhpmcounter7h,","highlight_start":1,"highlight_end":19},{"text":"    __read_mhpmcounter7,","highlight_start":1,"highlight_end":25},{"text":"    __write_mhpmcounter7","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:54:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB07,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter7,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter7h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter7,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter7\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":1014,"byte_end":1119,"line_start":47,"line_end":53,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB06,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter6,","highlight_start":1,"highlight_end":18},{"text":"    mhpmcounter6h,","highlight_start":1,"highlight_end":19},{"text":"    __read_mhpmcounter6,","highlight_start":1,"highlight_end":25},{"text":"    __write_mhpmcounter6","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:47:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB06,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter6,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter6h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter6,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter6\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":907,"byte_end":1012,"line_start":40,"line_end":46,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB05,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter5,","highlight_start":1,"highlight_end":18},{"text":"    mhpmcounter5h,","highlight_start":1,"highlight_end":19},{"text":"    __read_mhpmcounter5,","highlight_start":1,"highlight_end":25},{"text":"    __write_mhpmcounter5","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:40:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB05,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter5,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter5h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter5,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter5\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":800,"byte_end":905,"line_start":33,"line_end":39,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB04,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter4,","highlight_start":1,"highlight_end":18},{"text":"    mhpmcounter4h,","highlight_start":1,"highlight_end":19},{"text":"    __read_mhpmcounter4,","highlight_start":1,"highlight_end":25},{"text":"    __write_mhpmcounter4","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:33:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB04,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter4,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter4h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter4,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter4\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":244,"byte_end":279,"line_start":8,"line_end":8,"column_start":13,"column_end":48,"is_primary":false,"text":[{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":13,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":693,"byte_end":798,"line_start":26,"line_end":32,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB03,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter3,","highlight_start":1,"highlight_end":18},{"text":"    mhpmcounter3h,","highlight_start":1,"highlight_end":19},{"text":"    __read_mhpmcounter3,","highlight_start":1,"highlight_end":25},{"text":"    __write_mhpmcounter3","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:26:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB03,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter3,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter3h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter3,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter3\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpcfgx.rs","byte_start":2999,"byte_end":3042,"line_start":114,"line_end":114,"column_start":5,"column_end":48,"is_primary":false,"text":[{"text":"    write_csr_as_usize!(0x3A2, __write_pmpcfg2);","highlight_start":5,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpcfgx.rs:114:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    write_csr_as_usize!(0x3A2, __write_pmpcfg2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3861,"byte_end":3893,"line_start":151,"line_end":151,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpcfgx.rs","byte_start":2284,"byte_end":2327,"line_start":87,"line_end":87,"column_start":5,"column_end":48,"is_primary":false,"text":[{"text":"    write_csr_as_usize!(0x3A0, __write_pmpcfg0);","highlight_start":5,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"write_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":3775,"byte_end":4031,"line_start":149,"line_end":159,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr_as_usize {","highlight_start":1,"highlight_end":34},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        write_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn write(bits: usize) {","highlight_start":1,"highlight_end":36},{"text":"            unsafe { _write(bits) }","highlight_start":1,"highlight_end":36},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpcfgx.rs:87:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    write_csr_as_usize!(0x3A0, __write_pmpcfg0);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5289,"byte_end":5292,"line_start":207,"line_end":207,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mip.rs","byte_start":1468,"byte_end":1494,"line_start":75,"line_end":75,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"clear!(0x344, __clear_mip);","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"clear!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5001,"byte_end":5705,"line_start":199,"line_end":223,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! clear {","highlight_start":1,"highlight_end":21},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Clear the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _clear(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:207:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mip.rs:75:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mclear!(0x344, __clear_mip);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `clear` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":4583,"byte_end":4586,"line_start":181,"line_end":181,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mip.rs","byte_start":1444,"byte_end":1466,"line_start":74,"line_end":74,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"set!(0x344, __set_mip);","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"set!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":4301,"byte_end":4999,"line_start":173,"line_end":197,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! set {","highlight_start":1,"highlight_end":19},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Set the CSR","highlight_start":1,"highlight_end":24},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _set(bits: usize) {","highlight_start":1,"highlight_end":38},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:181:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mip.rs:74:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mset!(0x344, __set_mip);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `set` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5289,"byte_end":5292,"line_start":207,"line_end":207,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mstatus.rs","byte_start":5353,"byte_end":5383,"line_start":215,"line_end":215,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"clear!(0x300, __clear_mstatus);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"clear!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5001,"byte_end":5705,"line_start":199,"line_end":223,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! clear {","highlight_start":1,"highlight_end":21},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Clear the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _clear(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:207:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mstatus.rs:215:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m215\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mclear!(0x300, __clear_mstatus);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `clear` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":4583,"byte_end":4586,"line_start":181,"line_end":181,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mstatus.rs","byte_start":5325,"byte_end":5351,"line_start":214,"line_end":214,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"set!(0x300, __set_mstatus);","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"set!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":4301,"byte_end":4999,"line_start":173,"line_end":197,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! set {","highlight_start":1,"highlight_end":19},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Set the CSR","highlight_start":1,"highlight_end":24},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _set(bits: usize) {","highlight_start":1,"highlight_end":38},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:181:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mstatus.rs:214:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mset!(0x300, __set_mstatus);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `set` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mstatus.rs","byte_start":5289,"byte_end":5323,"line_start":213,"line_end":213,"column_start":1,"column_end":35,"is_primary":false,"text":[{"text":"write_csr!(0x300, __write_mstatus);","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mstatus.rs:213:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwrite_csr!(0x300, __write_mstatus);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5289,"byte_end":5292,"line_start":207,"line_end":207,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mie.rs","byte_start":1459,"byte_end":1485,"line_start":75,"line_end":75,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"clear!(0x304, __clear_mie);","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"clear!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5001,"byte_end":5705,"line_start":199,"line_end":223,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! clear {","highlight_start":1,"highlight_end":21},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Clear the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _clear(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:207:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mie.rs:75:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mclear!(0x304, __clear_mie);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `clear` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":4583,"byte_end":4586,"line_start":181,"line_end":181,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mie.rs","byte_start":1435,"byte_end":1457,"line_start":74,"line_end":74,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"set!(0x304, __set_mie);","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"set!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":4301,"byte_end":4999,"line_start":173,"line_end":197,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! set {","highlight_start":1,"highlight_end":19},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Set the CSR","highlight_start":1,"highlight_end":24},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _set(bits: usize) {","highlight_start":1,"highlight_end":38},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:181:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mie.rs:74:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mset!(0x304, __set_mie);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `set` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5289,"byte_end":5292,"line_start":207,"line_end":207,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mideleg.rs","byte_start":1123,"byte_end":1153,"line_start":57,"line_end":57,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"clear!(0x303, __clear_mideleg);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"clear!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5001,"byte_end":5705,"line_start":199,"line_end":223,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! clear {","highlight_start":1,"highlight_end":21},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Clear the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _clear(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:207:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mideleg.rs:57:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mclear!(0x303, __clear_mideleg);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `clear` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":4583,"byte_end":4586,"line_start":181,"line_end":181,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mideleg.rs","byte_start":1095,"byte_end":1121,"line_start":56,"line_end":56,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"set!(0x303, __set_mideleg);","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"set!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":4301,"byte_end":4999,"line_start":173,"line_end":197,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! set {","highlight_start":1,"highlight_end":19},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Set the CSR","highlight_start":1,"highlight_end":24},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _set(bits: usize) {","highlight_start":1,"highlight_end":38},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:181:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mideleg.rs:56:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mset!(0x303, __set_mideleg);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `set` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5289,"byte_end":5292,"line_start":207,"line_end":207,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/medeleg.rs","byte_start":2258,"byte_end":2288,"line_start":105,"line_end":105,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"clear!(0x302, __clear_medeleg);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"clear!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5001,"byte_end":5705,"line_start":199,"line_end":223,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! clear {","highlight_start":1,"highlight_end":21},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Clear the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _clear(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:207:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/medeleg.rs:105:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mclear!(0x302, __clear_medeleg);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `clear` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":4583,"byte_end":4586,"line_start":181,"line_end":181,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/medeleg.rs","byte_start":2230,"byte_end":2256,"line_start":104,"line_end":104,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"set!(0x302, __set_medeleg);","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"set!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":4301,"byte_end":4999,"line_start":173,"line_end":197,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! set {","highlight_start":1,"highlight_end":19},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Set the CSR","highlight_start":1,"highlight_end":24},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _set(bits: usize) {","highlight_start":1,"highlight_end":38},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:181:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/medeleg.rs:104:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mset!(0x302, __set_medeleg);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `set` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5289,"byte_end":5292,"line_start":207,"line_end":207,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mcounteren.rs","byte_start":844,"byte_end":877,"line_start":41,"line_end":41,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"clear!(0x306, __clear_mcounteren);","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"clear!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5001,"byte_end":5705,"line_start":199,"line_end":223,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! clear {","highlight_start":1,"highlight_end":21},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Clear the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _clear(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:207:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mcounteren.rs:41:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mclear!(0x306, __clear_mcounteren);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `clear` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":4583,"byte_end":4586,"line_start":181,"line_end":181,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mcounteren.rs","byte_start":813,"byte_end":842,"line_start":40,"line_end":40,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"set!(0x306, __set_mcounteren);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"set!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":4301,"byte_end":4999,"line_start":173,"line_end":197,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! set {","highlight_start":1,"highlight_end":19},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Set the CSR","highlight_start":1,"highlight_end":24},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _set(bits: usize) {","highlight_start":1,"highlight_end":38},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:181:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mcounteren.rs:40:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mset!(0x306, __set_mcounteren);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `set` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mcounteren.rs","byte_start":774,"byte_end":811,"line_start":39,"line_end":39,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"write_csr!(0x306, __write_mcounteren);","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mcounteren.rs:39:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwrite_csr!(0x306, __write_mcounteren);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5289,"byte_end":5292,"line_start":207,"line_end":207,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sstatus.rs","byte_start":2228,"byte_end":2258,"line_start":102,"line_end":102,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"clear!(0x100, __clear_sstatus);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"clear!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5001,"byte_end":5705,"line_start":199,"line_end":223,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! clear {","highlight_start":1,"highlight_end":21},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Clear the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _clear(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:207:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sstatus.rs:102:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mclear!(0x100, __clear_sstatus);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `clear` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":4583,"byte_end":4586,"line_start":181,"line_end":181,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sstatus.rs","byte_start":2200,"byte_end":2226,"line_start":101,"line_end":101,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"set!(0x100, __set_sstatus);","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"set!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":4301,"byte_end":4999,"line_start":173,"line_end":197,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! set {","highlight_start":1,"highlight_end":19},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Set the CSR","highlight_start":1,"highlight_end":24},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _set(bits: usize) {","highlight_start":1,"highlight_end":38},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:181:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sstatus.rs:101:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mset!(0x100, __set_sstatus);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `set` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sstatus.rs","byte_start":2164,"byte_end":2198,"line_start":100,"line_end":100,"column_start":1,"column_end":35,"is_primary":false,"text":[{"text":"write_csr!(0x100, __write_sstatus);","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sstatus.rs:100:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwrite_csr!(0x100, __write_sstatus);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5289,"byte_end":5292,"line_start":207,"line_end":207,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sie.rs","byte_start":1083,"byte_end":1109,"line_start":57,"line_end":57,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"clear!(0x104, __clear_sie);","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"clear!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5001,"byte_end":5705,"line_start":199,"line_end":223,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! clear {","highlight_start":1,"highlight_end":21},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Clear the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _clear(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:207:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sie.rs:57:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mclear!(0x104, __clear_sie);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `clear` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":4583,"byte_end":4586,"line_start":181,"line_end":181,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sie.rs","byte_start":1059,"byte_end":1081,"line_start":56,"line_end":56,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"set!(0x104, __set_sie);","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"set!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":4301,"byte_end":4999,"line_start":173,"line_end":197,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! set {","highlight_start":1,"highlight_end":19},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Set the CSR","highlight_start":1,"highlight_end":24},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _set(bits: usize) {","highlight_start":1,"highlight_end":38},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:181:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sie.rs:56:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mset!(0x104, __set_sie);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `set` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5289,"byte_end":5292,"line_start":207,"line_end":207,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/scounteren.rs","byte_start":820,"byte_end":853,"line_start":41,"line_end":41,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"clear!(0x106, __clear_scounteren);","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"clear!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5001,"byte_end":5705,"line_start":199,"line_end":223,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! clear {","highlight_start":1,"highlight_end":21},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Clear the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _clear(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:207:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/scounteren.rs:41:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mclear!(0x106, __clear_scounteren);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `clear` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":4583,"byte_end":4586,"line_start":181,"line_end":181,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/scounteren.rs","byte_start":789,"byte_end":818,"line_start":40,"line_end":40,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"set!(0x106, __set_scounteren);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"set!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":4301,"byte_end":4999,"line_start":173,"line_end":197,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! set {","highlight_start":1,"highlight_end":19},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Set the CSR","highlight_start":1,"highlight_end":24},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _set(bits: usize) {","highlight_start":1,"highlight_end":38},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:181:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/scounteren.rs:40:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mset!(0x106, __set_scounteren);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `set` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/scounteren.rs","byte_start":750,"byte_end":787,"line_start":39,"line_end":39,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"write_csr!(0x106, __write_scounteren);","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/scounteren.rs:39:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwrite_csr!(0x106, __write_scounteren);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/fcsr.rs","byte_start":2024,"byte_end":2055,"line_start":104,"line_end":104,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"write_csr!(0x003, __write_fcsr);","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/fcsr.rs:104:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwrite_csr!(0x003, __write_fcsr);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5289,"byte_end":5292,"line_start":207,"line_end":207,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/ustatus.rs","byte_start":572,"byte_end":602,"line_start":29,"line_end":29,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"clear!(0x000, __clear_ustatus);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"clear!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5001,"byte_end":5705,"line_start":199,"line_end":223,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! clear {","highlight_start":1,"highlight_end":21},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Clear the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _clear(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:207:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/ustatus.rs:29:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mclear!(0x000, __clear_ustatus);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `clear` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":4583,"byte_end":4586,"line_start":181,"line_end":181,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/ustatus.rs","byte_start":544,"byte_end":570,"line_start":28,"line_end":28,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"set!(0x000, __set_ustatus);","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"set!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":4301,"byte_end":4999,"line_start":173,"line_end":197,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! set {","highlight_start":1,"highlight_end":19},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Set the CSR","highlight_start":1,"highlight_end":24},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _set(bits: usize) {","highlight_start":1,"highlight_end":38},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:181:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/ustatus.rs:28:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mset!(0x000, __set_ustatus);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `set` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2635,"byte_end":2638,"line_start":105,"line_end":105,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/ustatus.rs","byte_start":508,"byte_end":542,"line_start":27,"line_end":27,"column_start":1,"column_end":35,"is_primary":false,"text":[{"text":"write_csr!(0x000, __write_ustatus);","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"write_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":2342,"byte_end":3051,"line_start":97,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! write_csr {","highlight_start":1,"highlight_end":25},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Writes the CSR","highlight_start":1,"highlight_end":27},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _write(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:105:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrw x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/ustatus.rs:27:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwrite_csr!(0x000, __write_ustatus);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `write_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5289,"byte_end":5292,"line_start":207,"line_end":207,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/uie.rs","byte_start":699,"byte_end":725,"line_start":39,"line_end":39,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"clear!(0x004, __clear_uie);","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"clear!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":5001,"byte_end":5705,"line_start":199,"line_end":223,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! clear {","highlight_start":1,"highlight_end":21},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Clear the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _clear(bits: usize) {","highlight_start":1,"highlight_end":40},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:207:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrc x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/uie.rs:39:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mclear!(0x004, __clear_uie);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `clear` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":4583,"byte_end":4586,"line_start":181,"line_end":181,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/uie.rs","byte_start":675,"byte_end":697,"line_start":38,"line_end":38,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"set!(0x004, __set_uie);","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"set!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":4301,"byte_end":4999,"line_start":173,"line_end":197,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! set {","highlight_start":1,"highlight_end":19},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Set the CSR","highlight_start":1,"highlight_end":24},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        #[allow(unused_variables)]","highlight_start":1,"highlight_end":35},{"text":"        unsafe fn _set(bits: usize) {","highlight_start":1,"highlight_end":38},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn(bits: usize);","highlight_start":1,"highlight_end":49},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn(bits);","highlight_start":1,"highlight_end":35},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:181:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                () => asm!(\"csrrs x0, {1}, {0}\", in(reg) bits, const $csr_number),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/uie.rs:38:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mset!(0x004, __set_uie);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `set` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/asm.rs","byte_start":301,"byte_end":304,"line_start":10,"line_end":10,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!($asm),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/asm.rs","byte_start":790,"byte_end":1095,"line_start":33,"line_end":38,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"instruction!(","highlight_start":1,"highlight_end":14},{"text":"    /// `WFI` instruction wrapper","highlight_start":1,"highlight_end":34},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// Provides a hint to the implementation that the current hart can be stalled until an interrupt might need servicing.","highlight_start":1,"highlight_end":124},{"text":"    /// The WFI instruction is just a hint, and a legal implementation is to implement WFI as a NOP.","highlight_start":1,"highlight_end":101},{"text":"    , wfi, \"wfi\", __wfi);","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"instruction!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/asm.rs","byte_start":27,"byte_end":652,"line_start":3,"line_end":26,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! instruction {","highlight_start":1,"highlight_end":27},{"text":"    ($(#[$attr:meta])*, $fnname:ident, $asm:expr, $asm_fn:ident) => (","highlight_start":1,"highlight_end":70},{"text":"        $(#[$attr])*","highlight_start":1,"highlight_end":21},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub unsafe fn $fnname() {","highlight_start":1,"highlight_end":34},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!($asm),","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn();","highlight_start":1,"highlight_end":38},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn();","highlight_start":1,"highlight_end":31},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    )","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/asm.rs:10:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!($asm),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0minstruction!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// `WFI` instruction wrapper\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ///\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// Provides a hint to the implementation that the current hart can be stalled until an interrupt might need servicing.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// The WFI instruction is just a hint, and a legal implementation is to implement WFI as a NOP.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    , wfi, \"wfi\", __wfi);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `instruction` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/asm.rs","byte_start":301,"byte_end":304,"line_start":10,"line_end":10,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"                () => asm!($asm),","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/asm.rs","byte_start":654,"byte_end":788,"line_start":28,"line_end":32,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"instruction!(","highlight_start":1,"highlight_end":14},{"text":"    /// `EBREAK` instruction wrapper","highlight_start":1,"highlight_end":37},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// Generates a breakpoint exception.","highlight_start":1,"highlight_end":42},{"text":"    , ebreak, \"ebreak\", __ebreak);","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"instruction!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/asm.rs","byte_start":27,"byte_end":652,"line_start":3,"line_end":26,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! instruction {","highlight_start":1,"highlight_end":27},{"text":"    ($(#[$attr:meta])*, $fnname:ident, $asm:expr, $asm_fn:ident) => (","highlight_start":1,"highlight_end":70},{"text":"        $(#[$attr])*","highlight_start":1,"highlight_end":21},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub unsafe fn $fnname() {","highlight_start":1,"highlight_end":34},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => asm!($asm),","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn();","highlight_start":1,"highlight_end":38},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn();","highlight_start":1,"highlight_end":31},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    )","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/asm.rs:10:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                () => asm!($asm),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0minstruction!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// `EBREAK` instruction wrapper\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ///\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// Generates a breakpoint exception.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    , ebreak, \"ebreak\", __ebreak);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `instruction` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":2148,"byte_end":2213,"line_start":41,"line_end":41,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x33F, mhpmevent31, __read_mhpmevent31, __write_mhpmevent31);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:41:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x33F, mhpmevent31, __read_mhpmevent31, __write_mhpmevent31);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":2081,"byte_end":2146,"line_start":40,"line_end":40,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x33E, mhpmevent30, __read_mhpmevent30, __write_mhpmevent30);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:40:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x33E, mhpmevent30, __read_mhpmevent30, __write_mhpmevent30);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":2014,"byte_end":2079,"line_start":39,"line_end":39,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x33D, mhpmevent29, __read_mhpmevent29, __write_mhpmevent29);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:39:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x33D, mhpmevent29, __read_mhpmevent29, __write_mhpmevent29);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1947,"byte_end":2012,"line_start":38,"line_end":38,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x33C, mhpmevent28, __read_mhpmevent28, __write_mhpmevent28);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:38:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x33C, mhpmevent28, __read_mhpmevent28, __write_mhpmevent28);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1880,"byte_end":1945,"line_start":37,"line_end":37,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x33B, mhpmevent27, __read_mhpmevent27, __write_mhpmevent27);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:37:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x33B, mhpmevent27, __read_mhpmevent27, __write_mhpmevent27);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1813,"byte_end":1878,"line_start":36,"line_end":36,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x33A, mhpmevent26, __read_mhpmevent26, __write_mhpmevent26);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:36:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x33A, mhpmevent26, __read_mhpmevent26, __write_mhpmevent26);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1746,"byte_end":1811,"line_start":35,"line_end":35,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x339, mhpmevent25, __read_mhpmevent25, __write_mhpmevent25);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:35:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x339, mhpmevent25, __read_mhpmevent25, __write_mhpmevent25);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1679,"byte_end":1744,"line_start":34,"line_end":34,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x338, mhpmevent24, __read_mhpmevent24, __write_mhpmevent24);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:34:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x338, mhpmevent24, __read_mhpmevent24, __write_mhpmevent24);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1612,"byte_end":1677,"line_start":33,"line_end":33,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x337, mhpmevent23, __read_mhpmevent23, __write_mhpmevent23);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:33:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x337, mhpmevent23, __read_mhpmevent23, __write_mhpmevent23);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1545,"byte_end":1610,"line_start":32,"line_end":32,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x336, mhpmevent22, __read_mhpmevent22, __write_mhpmevent22);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:32:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x336, mhpmevent22, __read_mhpmevent22, __write_mhpmevent22);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1478,"byte_end":1543,"line_start":31,"line_end":31,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x335, mhpmevent21, __read_mhpmevent21, __write_mhpmevent21);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:31:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x335, mhpmevent21, __read_mhpmevent21, __write_mhpmevent21);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1411,"byte_end":1476,"line_start":30,"line_end":30,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x334, mhpmevent20, __read_mhpmevent20, __write_mhpmevent20);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:30:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x334, mhpmevent20, __read_mhpmevent20, __write_mhpmevent20);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1344,"byte_end":1409,"line_start":29,"line_end":29,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x333, mhpmevent19, __read_mhpmevent19, __write_mhpmevent19);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:29:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x333, mhpmevent19, __read_mhpmevent19, __write_mhpmevent19);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1277,"byte_end":1342,"line_start":28,"line_end":28,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x332, mhpmevent18, __read_mhpmevent18, __write_mhpmevent18);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:28:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x332, mhpmevent18, __read_mhpmevent18, __write_mhpmevent18);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1210,"byte_end":1275,"line_start":27,"line_end":27,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x331, mhpmevent17, __read_mhpmevent17, __write_mhpmevent17);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:27:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x331, mhpmevent17, __read_mhpmevent17, __write_mhpmevent17);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1143,"byte_end":1208,"line_start":26,"line_end":26,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x330, mhpmevent16, __read_mhpmevent16, __write_mhpmevent16);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:26:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x330, mhpmevent16, __read_mhpmevent16, __write_mhpmevent16);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1076,"byte_end":1141,"line_start":25,"line_end":25,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x32F, mhpmevent15, __read_mhpmevent15, __write_mhpmevent15);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:25:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x32F, mhpmevent15, __read_mhpmevent15, __write_mhpmevent15);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":1009,"byte_end":1074,"line_start":24,"line_end":24,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x32E, mhpmevent14, __read_mhpmevent14, __write_mhpmevent14);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:24:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x32E, mhpmevent14, __read_mhpmevent14, __write_mhpmevent14);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":942,"byte_end":1007,"line_start":23,"line_end":23,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x32D, mhpmevent13, __read_mhpmevent13, __write_mhpmevent13);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:23:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x32D, mhpmevent13, __read_mhpmevent13, __write_mhpmevent13);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":875,"byte_end":940,"line_start":22,"line_end":22,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x32C, mhpmevent12, __read_mhpmevent12, __write_mhpmevent12);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:22:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x32C, mhpmevent12, __read_mhpmevent12, __write_mhpmevent12);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":808,"byte_end":873,"line_start":21,"line_end":21,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x32B, mhpmevent11, __read_mhpmevent11, __write_mhpmevent11);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:21:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x32B, mhpmevent11, __read_mhpmevent11, __write_mhpmevent11);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":741,"byte_end":806,"line_start":20,"line_end":20,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"reg!(0x32A, mhpmevent10, __read_mhpmevent10, __write_mhpmevent10);","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:20:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x32A, mhpmevent10, __read_mhpmevent10, __write_mhpmevent10);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":677,"byte_end":739,"line_start":19,"line_end":19,"column_start":1,"column_end":63,"is_primary":false,"text":[{"text":"reg!(0x329, mhpmevent9, __read_mhpmevent9, __write_mhpmevent9);","highlight_start":1,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:19:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x329, mhpmevent9, __read_mhpmevent9, __write_mhpmevent9);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":613,"byte_end":675,"line_start":18,"line_end":18,"column_start":1,"column_end":63,"is_primary":false,"text":[{"text":"reg!(0x328, mhpmevent8, __read_mhpmevent8, __write_mhpmevent8);","highlight_start":1,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:18:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x328, mhpmevent8, __read_mhpmevent8, __write_mhpmevent8);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":549,"byte_end":611,"line_start":17,"line_end":17,"column_start":1,"column_end":63,"is_primary":false,"text":[{"text":"reg!(0x327, mhpmevent7, __read_mhpmevent7, __write_mhpmevent7);","highlight_start":1,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:17:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x327, mhpmevent7, __read_mhpmevent7, __write_mhpmevent7);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":485,"byte_end":547,"line_start":16,"line_end":16,"column_start":1,"column_end":63,"is_primary":false,"text":[{"text":"reg!(0x326, mhpmevent6, __read_mhpmevent6, __write_mhpmevent6);","highlight_start":1,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:16:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x326, mhpmevent6, __read_mhpmevent6, __write_mhpmevent6);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":421,"byte_end":483,"line_start":15,"line_end":15,"column_start":1,"column_end":63,"is_primary":false,"text":[{"text":"reg!(0x325, mhpmevent5, __read_mhpmevent5, __write_mhpmevent5);","highlight_start":1,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:15:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x325, mhpmevent5, __read_mhpmevent5, __write_mhpmevent5);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":357,"byte_end":419,"line_start":14,"line_end":14,"column_start":1,"column_end":63,"is_primary":false,"text":[{"text":"reg!(0x324, mhpmevent4, __read_mhpmevent4, __write_mhpmevent4);","highlight_start":1,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:14:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x324, mhpmevent4, __read_mhpmevent4, __write_mhpmevent4);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":293,"byte_end":355,"line_start":13,"line_end":13,"column_start":1,"column_end":63,"is_primary":false,"text":[{"text":"reg!(0x323, mhpmevent3, __read_mhpmevent3, __write_mhpmevent3);","highlight_start":1,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs","byte_start":0,"byte_end":291,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring event selector","highlight_start":1,"highlight_end":58},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmeventx.rs:13:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x323, mhpmevent3, __read_mhpmevent3, __write_mhpmevent3);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/minstret.rs","byte_start":23,"byte_end":65,"line_start":3,"line_end":3,"column_start":1,"column_end":43,"is_primary":false,"text":[{"text":"read_csr_as_usize!(0xB02, __read_minstret);","highlight_start":1,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/minstret.rs:3:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as_usize!(0xB02, __read_minstret);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":3773,"byte_end":3882,"line_start":222,"line_end":228,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB1F,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter31,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter31h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter31,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter31","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:222:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB1F,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter31,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m225\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter31h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m226\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter31,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter31\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m228\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":3662,"byte_end":3771,"line_start":215,"line_end":221,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB1E,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter30,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter30h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter30,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter30","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:215:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m215\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB1E,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m217\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter30,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter30h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter30,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter30\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":3551,"byte_end":3660,"line_start":208,"line_end":214,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB1D,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter29,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter29h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter29,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter29","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:208:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m209\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB1D,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter29,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter29h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter29,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter29\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":3440,"byte_end":3549,"line_start":201,"line_end":207,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB1C,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter28,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter28h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter28,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter28","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:201:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m201\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB1C,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter28,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m204\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter28h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter28,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter28\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":3329,"byte_end":3438,"line_start":194,"line_end":200,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB1B,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter27,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter27h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter27,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter27","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:194:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m194\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m195\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB1B,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter27,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter27h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m198\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter27,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m199\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter27\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":3218,"byte_end":3327,"line_start":187,"line_end":193,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB1A,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter26,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter26h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter26,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter26","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:187:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m187\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB1A,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter26,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m190\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter26h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter26,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter26\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":3107,"byte_end":3216,"line_start":180,"line_end":186,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB19,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter25,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter25h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter25,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter25","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:180:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m180\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB19,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter25,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter25h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter25,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter25\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":2996,"byte_end":3105,"line_start":173,"line_end":179,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB18,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter24,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter24h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter24,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter24","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:173:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB18,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m175\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter24,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m176\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter24h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter24,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter24\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":2885,"byte_end":2994,"line_start":166,"line_end":172,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB17,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter23,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter23h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter23,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter23","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:166:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m167\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB17,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m168\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter23,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m169\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter23h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m170\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter23,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m171\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter23\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":2774,"byte_end":2883,"line_start":159,"line_end":165,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB16,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter22,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter22h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter22,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter22","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:159:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter22,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter22h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter22,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter22\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":2663,"byte_end":2772,"line_start":152,"line_end":158,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB15,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter21,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter21h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter21,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter21","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:152:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m152\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB15,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter21,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter21h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter21,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter21\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":2552,"byte_end":2661,"line_start":145,"line_end":151,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB14,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter20,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter20h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter20,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter20","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:145:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m146\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB14,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter20,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter20h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m149\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter20,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter20\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":2441,"byte_end":2550,"line_start":138,"line_end":144,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB13,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter19,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter19h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter19,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter19","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:138:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m139\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB13,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter19,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter19h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter19,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter19\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":2330,"byte_end":2439,"line_start":131,"line_end":137,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB12,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter18,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter18h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter18,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter18","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:131:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB12,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter18,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter18h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter18,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter18\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":2219,"byte_end":2328,"line_start":124,"line_end":130,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB11,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter17,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter17h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter17,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter17","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:124:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB11,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter17,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter17h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter17,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter17\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":2108,"byte_end":2217,"line_start":117,"line_end":123,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB10,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter16,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter16h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter16,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter16","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:117:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB10,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter16h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter16\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":1997,"byte_end":2106,"line_start":110,"line_end":116,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB0F,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter15,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter15h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter15,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter15","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:110:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB0F,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter15,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter15h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter15,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter15\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":1886,"byte_end":1995,"line_start":103,"line_end":109,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB0E,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter14,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter14h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter14,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter14","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:103:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB0E,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter14,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter14h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter14,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter14\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":1775,"byte_end":1884,"line_start":96,"line_end":102,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB0D,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter13,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter13h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter13,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter13","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:96:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB0D,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter13,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter13h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter13,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter13\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":1664,"byte_end":1773,"line_start":89,"line_end":95,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB0C,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter12,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter12h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter12,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter12","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:89:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB0C,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter12,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter12h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter12,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter12\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":1553,"byte_end":1662,"line_start":82,"line_end":88,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB0B,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter11,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter11h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter11,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter11","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:82:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB0B,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter11,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter11h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter11,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter11\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":1442,"byte_end":1551,"line_start":75,"line_end":81,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB0A,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter10,","highlight_start":1,"highlight_end":19},{"text":"    mhpmcounter10h,","highlight_start":1,"highlight_end":20},{"text":"    __read_mhpmcounter10,","highlight_start":1,"highlight_end":26},{"text":"    __write_mhpmcounter10","highlight_start":1,"highlight_end":26},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:75:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB0A,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m77\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter10,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter10h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter10,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter10\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":1335,"byte_end":1440,"line_start":68,"line_end":74,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB09,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter9,","highlight_start":1,"highlight_end":18},{"text":"    mhpmcounter9h,","highlight_start":1,"highlight_end":19},{"text":"    __read_mhpmcounter9,","highlight_start":1,"highlight_end":25},{"text":"    __write_mhpmcounter9","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:68:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB09,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter9,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter9h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter9,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter9\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":1228,"byte_end":1333,"line_start":61,"line_end":67,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB08,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter8,","highlight_start":1,"highlight_end":18},{"text":"    mhpmcounter8h,","highlight_start":1,"highlight_end":19},{"text":"    __read_mhpmcounter8,","highlight_start":1,"highlight_end":25},{"text":"    __write_mhpmcounter8","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:61:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB08,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter8h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter8\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":1121,"byte_end":1226,"line_start":54,"line_end":60,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB07,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter7,","highlight_start":1,"highlight_end":18},{"text":"    mhpmcounter7h,","highlight_start":1,"highlight_end":19},{"text":"    __read_mhpmcounter7,","highlight_start":1,"highlight_end":25},{"text":"    __write_mhpmcounter7","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:54:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB07,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter7,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter7h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter7,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter7\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":1014,"byte_end":1119,"line_start":47,"line_end":53,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB06,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter6,","highlight_start":1,"highlight_end":18},{"text":"    mhpmcounter6h,","highlight_start":1,"highlight_end":19},{"text":"    __read_mhpmcounter6,","highlight_start":1,"highlight_end":25},{"text":"    __write_mhpmcounter6","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:47:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB06,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter6,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter6h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter6,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter6\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":907,"byte_end":1012,"line_start":40,"line_end":46,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB05,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter5,","highlight_start":1,"highlight_end":18},{"text":"    mhpmcounter5h,","highlight_start":1,"highlight_end":19},{"text":"    __read_mhpmcounter5,","highlight_start":1,"highlight_end":25},{"text":"    __write_mhpmcounter5","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:40:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB05,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter5,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter5h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter5,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter5\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":800,"byte_end":905,"line_start":33,"line_end":39,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB04,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter4,","highlight_start":1,"highlight_end":18},{"text":"    mhpmcounter4h,","highlight_start":1,"highlight_end":19},{"text":"    __read_mhpmcounter4,","highlight_start":1,"highlight_end":25},{"text":"    __write_mhpmcounter4","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:33:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB04,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter4,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter4h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter4,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter4\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":197,"byte_end":230,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":693,"byte_end":798,"line_start":26,"line_end":32,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xB03,","highlight_start":1,"highlight_end":11},{"text":"    mhpmcounter3,","highlight_start":1,"highlight_end":18},{"text":"    mhpmcounter3h,","highlight_start":1,"highlight_end":19},{"text":"    __read_mhpmcounter3,","highlight_start":1,"highlight_end":25},{"text":"    __write_mhpmcounter3","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs","byte_start":0,"byte_end":362,"line_start":1,"line_end":12,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Machine performance-monitoring counter","highlight_start":1,"highlight_end":51},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhpmcounterx.rs:26:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xB03,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter3,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mhpmcounter3h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_mhpmcounter3,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_mhpmcounter3\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mcycle.rs","byte_start":21,"byte_end":61,"line_start":3,"line_end":3,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"read_csr_as_usize!(0xB00, __read_mcycle);","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mcycle.rs:3:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as_usize!(0xB00, __read_mcycle);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":187,"byte_end":220,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":1176,"byte_end":1235,"line_start":28,"line_end":28,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"reg!(0x3BF, pmpaddr15, __read_pmpaddr15, __write_pmpaddr15);","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:28:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3BF, pmpaddr15, __read_pmpaddr15, __write_pmpaddr15);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":187,"byte_end":220,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":1115,"byte_end":1174,"line_start":27,"line_end":27,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"reg!(0x3BE, pmpaddr14, __read_pmpaddr14, __write_pmpaddr14);","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:27:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3BE, pmpaddr14, __read_pmpaddr14, __write_pmpaddr14);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":187,"byte_end":220,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":1054,"byte_end":1113,"line_start":26,"line_end":26,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"reg!(0x3BD, pmpaddr13, __read_pmpaddr13, __write_pmpaddr13);","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:26:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3BD, pmpaddr13, __read_pmpaddr13, __write_pmpaddr13);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":187,"byte_end":220,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":993,"byte_end":1052,"line_start":25,"line_end":25,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"reg!(0x3BC, pmpaddr12, __read_pmpaddr12, __write_pmpaddr12);","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:25:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3BC, pmpaddr12, __read_pmpaddr12, __write_pmpaddr12);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":187,"byte_end":220,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":932,"byte_end":991,"line_start":24,"line_end":24,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"reg!(0x3BB, pmpaddr11, __read_pmpaddr11, __write_pmpaddr11);","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:24:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3BB, pmpaddr11, __read_pmpaddr11, __write_pmpaddr11);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":187,"byte_end":220,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":871,"byte_end":930,"line_start":23,"line_end":23,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"reg!(0x3BA, pmpaddr10, __read_pmpaddr10, __write_pmpaddr10);","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:23:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3BA, pmpaddr10, __read_pmpaddr10, __write_pmpaddr10);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":187,"byte_end":220,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":813,"byte_end":869,"line_start":22,"line_end":22,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"reg!(0x3B9, pmpaddr9, __read_pmpaddr9, __write_pmpaddr9);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:22:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3B9, pmpaddr9, __read_pmpaddr9, __write_pmpaddr9);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":187,"byte_end":220,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":755,"byte_end":811,"line_start":21,"line_end":21,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"reg!(0x3B8, pmpaddr8, __read_pmpaddr8, __write_pmpaddr8);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:21:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3B8, pmpaddr8, __read_pmpaddr8, __write_pmpaddr8);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":187,"byte_end":220,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":697,"byte_end":753,"line_start":20,"line_end":20,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"reg!(0x3B7, pmpaddr7, __read_pmpaddr7, __write_pmpaddr7);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:20:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3B7, pmpaddr7, __read_pmpaddr7, __write_pmpaddr7);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":187,"byte_end":220,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":639,"byte_end":695,"line_start":19,"line_end":19,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"reg!(0x3B6, pmpaddr6, __read_pmpaddr6, __write_pmpaddr6);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:19:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3B6, pmpaddr6, __read_pmpaddr6, __write_pmpaddr6);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":187,"byte_end":220,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":581,"byte_end":637,"line_start":18,"line_end":18,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"reg!(0x3B5, pmpaddr5, __read_pmpaddr5, __write_pmpaddr5);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:18:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3B5, pmpaddr5, __read_pmpaddr5, __write_pmpaddr5);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":187,"byte_end":220,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":523,"byte_end":579,"line_start":17,"line_end":17,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"reg!(0x3B4, pmpaddr4, __read_pmpaddr4, __write_pmpaddr4);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:17:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3B4, pmpaddr4, __read_pmpaddr4, __write_pmpaddr4);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":187,"byte_end":220,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":465,"byte_end":521,"line_start":16,"line_end":16,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"reg!(0x3B3, pmpaddr3, __read_pmpaddr3, __write_pmpaddr3);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:16:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3B3, pmpaddr3, __read_pmpaddr3, __write_pmpaddr3);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":187,"byte_end":220,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":407,"byte_end":463,"line_start":15,"line_end":15,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"reg!(0x3B2, pmpaddr2, __read_pmpaddr2, __write_pmpaddr2);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:15:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3B2, pmpaddr2, __read_pmpaddr2, __write_pmpaddr2);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":187,"byte_end":220,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":349,"byte_end":405,"line_start":14,"line_end":14,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"reg!(0x3B1, pmpaddr1, __read_pmpaddr1, __write_pmpaddr1);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:14:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3B1, pmpaddr1, __read_pmpaddr1, __write_pmpaddr1);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":187,"byte_end":220,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":291,"byte_end":347,"line_start":13,"line_end":13,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"reg!(0x3B0, pmpaddr0, __read_pmpaddr0, __write_pmpaddr0);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs","byte_start":0,"byte_end":289,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csr:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":60},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Physical memory protection address register","highlight_start":1,"highlight_end":56},{"text":"        pub mod $csr {","highlight_start":1,"highlight_end":23},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            write_csr_as_usize!($addr, $writef);","highlight_start":1,"highlight_end":49},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpaddrx.rs:13:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mreg!(0x3B0, pmpaddr0, __read_pmpaddr0, __write_pmpaddr0);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1623,"byte_end":1654,"line_start":61,"line_end":61,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpcfgx.rs","byte_start":2950,"byte_end":2993,"line_start":113,"line_end":113,"column_start":5,"column_end":48,"is_primary":false,"text":[{"text":"    read_csr_as!(Pmpcsr, 0x3A2, __read_pmpcfg2);","highlight_start":5,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1527,"byte_end":1836,"line_start":59,"line_end":71,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as {","highlight_start":1,"highlight_end":27},{"text":"    ($register:ident, $csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":61},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> $register {","highlight_start":1,"highlight_end":37},{"text":"            $register {","highlight_start":1,"highlight_end":24},{"text":"                bits: unsafe { _read() },","highlight_start":1,"highlight_end":42},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpcfgx.rs:113:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    read_csr_as!(Pmpcsr, 0x3A2, __read_pmpcfg2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1623,"byte_end":1654,"line_start":61,"line_end":61,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpcfgx.rs","byte_start":2235,"byte_end":2278,"line_start":86,"line_end":86,"column_start":5,"column_end":48,"is_primary":false,"text":[{"text":"    read_csr_as!(Pmpcsr, 0x3A0, __read_pmpcfg0);","highlight_start":5,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1527,"byte_end":1836,"line_start":59,"line_end":71,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as {","highlight_start":1,"highlight_end":27},{"text":"    ($register:ident, $csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":61},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> $register {","highlight_start":1,"highlight_end":37},{"text":"            $register {","highlight_start":1,"highlight_end":24},{"text":"                bits: unsafe { _read() },","highlight_start":1,"highlight_end":42},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/pmpcfgx.rs:86:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    read_csr_as!(Pmpcsr, 0x3A0, __read_pmpcfg0);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mtval.rs","byte_start":20,"byte_end":59,"line_start":3,"line_end":3,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"read_csr_as_usize!(0x343, __read_mtval);","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mtval.rs:3:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as_usize!(0x343, __read_mtval);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mscratch.rs","byte_start":23,"byte_end":65,"line_start":3,"line_end":3,"column_start":1,"column_end":43,"is_primary":false,"text":[{"text":"read_csr_as_usize!(0x340, __read_mscratch);","highlight_start":1,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mscratch.rs:3:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as_usize!(0x340, __read_mscratch);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1623,"byte_end":1654,"line_start":61,"line_end":61,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mip.rs","byte_start":1406,"byte_end":1442,"line_start":73,"line_end":73,"column_start":1,"column_end":37,"is_primary":false,"text":[{"text":"read_csr_as!(Mip, 0x344, __read_mip);","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1527,"byte_end":1836,"line_start":59,"line_end":71,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as {","highlight_start":1,"highlight_end":27},{"text":"    ($register:ident, $csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":61},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> $register {","highlight_start":1,"highlight_end":37},{"text":"            $register {","highlight_start":1,"highlight_end":24},{"text":"                bits: unsafe { _read() },","highlight_start":1,"highlight_end":42},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mip.rs:73:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as!(Mip, 0x344, __read_mip);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mepc.rs","byte_start":19,"byte_end":57,"line_start":3,"line_end":3,"column_start":1,"column_end":39,"is_primary":false,"text":[{"text":"read_csr_as_usize!(0x341, __read_mepc);","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mepc.rs:3:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as_usize!(0x341, __read_mepc);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1623,"byte_end":1654,"line_start":61,"line_end":61,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mcause.rs","byte_start":3482,"byte_end":3524,"line_start":138,"line_end":138,"column_start":1,"column_end":43,"is_primary":false,"text":[{"text":"read_csr_as!(Mcause, 0x342, __read_mcause);","highlight_start":1,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1527,"byte_end":1836,"line_start":59,"line_end":71,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as {","highlight_start":1,"highlight_end":27},{"text":"    ($register:ident, $csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":61},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> $register {","highlight_start":1,"highlight_end":37},{"text":"            $register {","highlight_start":1,"highlight_end":24},{"text":"                bits: unsafe { _read() },","highlight_start":1,"highlight_end":42},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mcause.rs:138:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as!(Mcause, 0x342, __read_mcause);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1623,"byte_end":1654,"line_start":61,"line_end":61,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mtvec.rs","byte_start":752,"byte_end":792,"line_start":38,"line_end":38,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"read_csr_as!(Mtvec, 0x305, __read_mtvec);","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1527,"byte_end":1836,"line_start":59,"line_end":71,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as {","highlight_start":1,"highlight_end":27},{"text":"    ($register:ident, $csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":61},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> $register {","highlight_start":1,"highlight_end":37},{"text":"            $register {","highlight_start":1,"highlight_end":24},{"text":"                bits: unsafe { _read() },","highlight_start":1,"highlight_end":42},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mtvec.rs:38:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as!(Mtvec, 0x305, __read_mtvec);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1623,"byte_end":1654,"line_start":61,"line_end":61,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mstatus.rs","byte_start":5243,"byte_end":5287,"line_start":212,"line_end":212,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"read_csr_as!(Mstatus, 0x300, __read_mstatus);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1527,"byte_end":1836,"line_start":59,"line_end":71,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as {","highlight_start":1,"highlight_end":27},{"text":"    ($register:ident, $csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":61},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> $register {","highlight_start":1,"highlight_end":37},{"text":"            $register {","highlight_start":1,"highlight_end":24},{"text":"                bits: unsafe { _read() },","highlight_start":1,"highlight_end":42},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mstatus.rs:212:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as!(Mstatus, 0x300, __read_mstatus);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/misa.rs","byte_start":1125,"byte_end":1154,"line_start":51,"line_end":51,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"read_csr!(0x301, __read_misa);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/misa.rs:51:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr!(0x301, __read_misa);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1623,"byte_end":1654,"line_start":61,"line_end":61,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mie.rs","byte_start":1397,"byte_end":1433,"line_start":73,"line_end":73,"column_start":1,"column_end":37,"is_primary":false,"text":[{"text":"read_csr_as!(Mie, 0x304, __read_mie);","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1527,"byte_end":1836,"line_start":59,"line_end":71,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as {","highlight_start":1,"highlight_end":27},{"text":"    ($register:ident, $csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":61},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> $register {","highlight_start":1,"highlight_end":37},{"text":"            $register {","highlight_start":1,"highlight_end":24},{"text":"                bits: unsafe { _read() },","highlight_start":1,"highlight_end":42},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mie.rs:73:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as!(Mie, 0x304, __read_mie);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1623,"byte_end":1654,"line_start":61,"line_end":61,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mideleg.rs","byte_start":1049,"byte_end":1093,"line_start":55,"line_end":55,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"read_csr_as!(Mideleg, 0x303, __read_mideleg);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1527,"byte_end":1836,"line_start":59,"line_end":71,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as {","highlight_start":1,"highlight_end":27},{"text":"    ($register:ident, $csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":61},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> $register {","highlight_start":1,"highlight_end":37},{"text":"            $register {","highlight_start":1,"highlight_end":24},{"text":"                bits: unsafe { _read() },","highlight_start":1,"highlight_end":42},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mideleg.rs:55:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as!(Mideleg, 0x303, __read_mideleg);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1623,"byte_end":1654,"line_start":61,"line_end":61,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/medeleg.rs","byte_start":2184,"byte_end":2228,"line_start":103,"line_end":103,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"read_csr_as!(Medeleg, 0x302, __read_medeleg);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1527,"byte_end":1836,"line_start":59,"line_end":71,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as {","highlight_start":1,"highlight_end":27},{"text":"    ($register:ident, $csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":61},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> $register {","highlight_start":1,"highlight_end":37},{"text":"            $register {","highlight_start":1,"highlight_end":24},{"text":"                bits: unsafe { _read() },","highlight_start":1,"highlight_end":42},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/medeleg.rs:103:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as!(Medeleg, 0x302, __read_medeleg);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1623,"byte_end":1654,"line_start":61,"line_end":61,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mcounteren.rs","byte_start":722,"byte_end":772,"line_start":38,"line_end":38,"column_start":1,"column_end":51,"is_primary":false,"text":[{"text":"read_csr_as!(Mcounteren, 0x306, __read_mcounteren);","highlight_start":1,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1527,"byte_end":1836,"line_start":59,"line_end":71,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as {","highlight_start":1,"highlight_end":27},{"text":"    ($register:ident, $csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":61},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> $register {","highlight_start":1,"highlight_end":37},{"text":"            $register {","highlight_start":1,"highlight_end":24},{"text":"                bits: unsafe { _read() },","highlight_start":1,"highlight_end":42},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mcounteren.rs:38:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as!(Mcounteren, 0x306, __read_mcounteren);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mvendorid.rs","byte_start":420,"byte_end":454,"line_start":23,"line_end":23,"column_start":1,"column_end":35,"is_primary":false,"text":[{"text":"read_csr!(0xF11, __read_mvendorid);","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mvendorid.rs:23:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr!(0xF11, __read_mvendorid);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mimpid.rs","byte_start":286,"byte_end":317,"line_start":18,"line_end":18,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"read_csr!(0xF11, __read_mimpid);","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mimpid.rs:18:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr!(0xF11, __read_mimpid);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhartid.rs","byte_start":22,"byte_end":63,"line_start":3,"line_end":3,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"read_csr_as_usize!(0xf14, __read_mhartid);","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/mhartid.rs:3:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as_usize!(0xf14, __read_mhartid);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/marchid.rs","byte_start":290,"byte_end":322,"line_start":18,"line_end":18,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"read_csr!(0xF11, __read_marchid);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/marchid.rs:18:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr!(0xF11, __read_marchid);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1623,"byte_end":1654,"line_start":61,"line_end":61,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/satp.rs","byte_start":2176,"byte_end":2214,"line_start":97,"line_end":97,"column_start":1,"column_end":39,"is_primary":false,"text":[{"text":"read_csr_as!(Satp, 0x180, __read_satp);","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1527,"byte_end":1836,"line_start":59,"line_end":71,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as {","highlight_start":1,"highlight_end":27},{"text":"    ($register:ident, $csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":61},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> $register {","highlight_start":1,"highlight_end":37},{"text":"            $register {","highlight_start":1,"highlight_end":24},{"text":"                bits: unsafe { _read() },","highlight_start":1,"highlight_end":42},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/satp.rs:97:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as!(Satp, 0x180, __read_satp);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/stval.rs","byte_start":20,"byte_end":59,"line_start":3,"line_end":3,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"read_csr_as_usize!(0x143, __read_stval);","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/stval.rs:3:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as_usize!(0x143, __read_stval);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sscratch.rs","byte_start":23,"byte_end":65,"line_start":3,"line_end":3,"column_start":1,"column_end":43,"is_primary":false,"text":[{"text":"read_csr_as_usize!(0x140, __read_sscratch);","highlight_start":1,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sscratch.rs:3:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as_usize!(0x140, __read_sscratch);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1623,"byte_end":1654,"line_start":61,"line_end":61,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sip.rs","byte_start":1027,"byte_end":1063,"line_start":55,"line_end":55,"column_start":1,"column_end":37,"is_primary":false,"text":[{"text":"read_csr_as!(Sip, 0x144, __read_sip);","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1527,"byte_end":1836,"line_start":59,"line_end":71,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as {","highlight_start":1,"highlight_end":27},{"text":"    ($register:ident, $csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":61},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> $register {","highlight_start":1,"highlight_end":37},{"text":"            $register {","highlight_start":1,"highlight_end":24},{"text":"                bits: unsafe { _read() },","highlight_start":1,"highlight_end":42},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sip.rs:55:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as!(Sip, 0x144, __read_sip);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sepc.rs","byte_start":19,"byte_end":57,"line_start":3,"line_end":3,"column_start":1,"column_end":39,"is_primary":false,"text":[{"text":"read_csr_as_usize!(0x141, __read_sepc);","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sepc.rs:3:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as_usize!(0x141, __read_sepc);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1623,"byte_end":1654,"line_start":61,"line_end":61,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/scause.rs","byte_start":2641,"byte_end":2683,"line_start":117,"line_end":117,"column_start":1,"column_end":43,"is_primary":false,"text":[{"text":"read_csr_as!(Scause, 0x142, __read_scause);","highlight_start":1,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1527,"byte_end":1836,"line_start":59,"line_end":71,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as {","highlight_start":1,"highlight_end":27},{"text":"    ($register:ident, $csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":61},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> $register {","highlight_start":1,"highlight_end":37},{"text":"            $register {","highlight_start":1,"highlight_end":24},{"text":"                bits: unsafe { _read() },","highlight_start":1,"highlight_end":42},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/scause.rs:117:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as!(Scause, 0x142, __read_scause);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1623,"byte_end":1654,"line_start":61,"line_end":61,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/stvec.rs","byte_start":679,"byte_end":719,"line_start":33,"line_end":33,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"read_csr_as!(Stvec, 0x105, __read_stvec);","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1527,"byte_end":1836,"line_start":59,"line_end":71,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as {","highlight_start":1,"highlight_end":27},{"text":"    ($register:ident, $csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":61},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> $register {","highlight_start":1,"highlight_end":37},{"text":"            $register {","highlight_start":1,"highlight_end":24},{"text":"                bits: unsafe { _read() },","highlight_start":1,"highlight_end":42},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/stvec.rs:33:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as!(Stvec, 0x105, __read_stvec);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1623,"byte_end":1654,"line_start":61,"line_end":61,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sstatus.rs","byte_start":2118,"byte_end":2162,"line_start":99,"line_end":99,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"read_csr_as!(Sstatus, 0x100, __read_sstatus);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1527,"byte_end":1836,"line_start":59,"line_end":71,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as {","highlight_start":1,"highlight_end":27},{"text":"    ($register:ident, $csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":61},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> $register {","highlight_start":1,"highlight_end":37},{"text":"            $register {","highlight_start":1,"highlight_end":24},{"text":"                bits: unsafe { _read() },","highlight_start":1,"highlight_end":42},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sstatus.rs:99:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as!(Sstatus, 0x100, __read_sstatus);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1623,"byte_end":1654,"line_start":61,"line_end":61,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sie.rs","byte_start":1021,"byte_end":1057,"line_start":55,"line_end":55,"column_start":1,"column_end":37,"is_primary":false,"text":[{"text":"read_csr_as!(Sie, 0x104, __read_sie);","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1527,"byte_end":1836,"line_start":59,"line_end":71,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as {","highlight_start":1,"highlight_end":27},{"text":"    ($register:ident, $csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":61},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> $register {","highlight_start":1,"highlight_end":37},{"text":"            $register {","highlight_start":1,"highlight_end":24},{"text":"                bits: unsafe { _read() },","highlight_start":1,"highlight_end":42},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/sie.rs:55:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as!(Sie, 0x104, __read_sie);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1623,"byte_end":1654,"line_start":61,"line_end":61,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/scounteren.rs","byte_start":698,"byte_end":748,"line_start":38,"line_end":38,"column_start":1,"column_end":51,"is_primary":false,"text":[{"text":"read_csr_as!(Scounteren, 0x106, __read_scounteren);","highlight_start":1,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1527,"byte_end":1836,"line_start":59,"line_end":71,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as {","highlight_start":1,"highlight_end":27},{"text":"    ($register:ident, $csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":61},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> $register {","highlight_start":1,"highlight_end":37},{"text":"            $register {","highlight_start":1,"highlight_end":24},{"text":"                bits: unsafe { _read() },","highlight_start":1,"highlight_end":42},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/scounteren.rs:38:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as!(Scounteren, 0x106, __read_scounteren);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/time.rs","byte_start":19,"byte_end":57,"line_start":3,"line_end":3,"column_start":1,"column_end":39,"is_primary":false,"text":[{"text":"read_csr_as_usize!(0xC01, __read_time);","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/time.rs:3:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as_usize!(0xC01, __read_time);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/instreth.rs","byte_start":184,"byte_end":226,"line_start":7,"line_end":7,"column_start":1,"column_end":43,"is_primary":false,"text":[{"text":"read_csr_as_usize!(0xC82, __read_instreth);","highlight_start":1,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/instreth.rs:7:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as_usize!(0xC82, __read_instreth);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/instret.rs","byte_start":175,"byte_end":216,"line_start":7,"line_end":7,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"read_csr_as_usize!(0xC02, __read_instret);","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/instret.rs:7:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as_usize!(0xC02, __read_instret);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":3542,"byte_end":3647,"line_start":220,"line_end":226,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC1F,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter31,","highlight_start":1,"highlight_end":18},{"text":"    hpmcounter31h,","highlight_start":1,"highlight_end":19},{"text":"    __read_hpmcounter31,","highlight_start":1,"highlight_end":25},{"text":"    __write_hpmcounter31","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:220:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC1F,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter31,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter31h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter31,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m225\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter31\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m226\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":3435,"byte_end":3540,"line_start":213,"line_end":219,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC1E,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter30,","highlight_start":1,"highlight_end":18},{"text":"    hpmcounter30h,","highlight_start":1,"highlight_end":19},{"text":"    __read_hpmcounter30,","highlight_start":1,"highlight_end":25},{"text":"    __write_hpmcounter30","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:213:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC1E,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m215\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter30,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter30h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m217\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter30,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter30\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":3328,"byte_end":3433,"line_start":206,"line_end":212,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC1D,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter29,","highlight_start":1,"highlight_end":18},{"text":"    hpmcounter29h,","highlight_start":1,"highlight_end":19},{"text":"    __read_hpmcounter29,","highlight_start":1,"highlight_end":25},{"text":"    __write_hpmcounter29","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:206:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC1D,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter29,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m209\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter29h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter29,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter29\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":3221,"byte_end":3326,"line_start":199,"line_end":205,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC1C,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter28,","highlight_start":1,"highlight_end":18},{"text":"    hpmcounter28h,","highlight_start":1,"highlight_end":19},{"text":"    __read_hpmcounter28,","highlight_start":1,"highlight_end":25},{"text":"    __write_hpmcounter28","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:199:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m199\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC1C,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m201\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter28,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter28h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter28,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m204\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter28\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":3114,"byte_end":3219,"line_start":192,"line_end":198,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC1B,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter27,","highlight_start":1,"highlight_end":18},{"text":"    hpmcounter27h,","highlight_start":1,"highlight_end":19},{"text":"    __read_hpmcounter27,","highlight_start":1,"highlight_end":25},{"text":"    __write_hpmcounter27","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:192:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC1B,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m194\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter27,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m195\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter27h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter27,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter27\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m198\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":3007,"byte_end":3112,"line_start":185,"line_end":191,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC1A,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter26,","highlight_start":1,"highlight_end":18},{"text":"    hpmcounter26h,","highlight_start":1,"highlight_end":19},{"text":"    __read_hpmcounter26,","highlight_start":1,"highlight_end":25},{"text":"    __write_hpmcounter26","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:185:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC1A,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m187\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter26,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter26h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter26,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m190\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter26\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":2900,"byte_end":3005,"line_start":178,"line_end":184,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC19,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter25,","highlight_start":1,"highlight_end":18},{"text":"    hpmcounter25h,","highlight_start":1,"highlight_end":19},{"text":"    __read_hpmcounter25,","highlight_start":1,"highlight_end":25},{"text":"    __write_hpmcounter25","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:178:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC19,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m180\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter25,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter25h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter25,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter25\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":2793,"byte_end":2898,"line_start":171,"line_end":177,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC18,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter24,","highlight_start":1,"highlight_end":18},{"text":"    hpmcounter24h,","highlight_start":1,"highlight_end":19},{"text":"    __read_hpmcounter24,","highlight_start":1,"highlight_end":25},{"text":"    __write_hpmcounter24","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:171:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m171\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC18,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter24,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter24h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m175\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter24,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m176\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter24\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":2686,"byte_end":2791,"line_start":164,"line_end":170,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC17,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter23,","highlight_start":1,"highlight_end":18},{"text":"    hpmcounter23h,","highlight_start":1,"highlight_end":19},{"text":"    __read_hpmcounter23,","highlight_start":1,"highlight_end":25},{"text":"    __write_hpmcounter23","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:164:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC17,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter23,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m167\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter23h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m168\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter23,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m169\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter23\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m170\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":2579,"byte_end":2684,"line_start":157,"line_end":163,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC16,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter22,","highlight_start":1,"highlight_end":18},{"text":"    hpmcounter22h,","highlight_start":1,"highlight_end":19},{"text":"    __read_hpmcounter22,","highlight_start":1,"highlight_end":25},{"text":"    __write_hpmcounter22","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:157:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter22,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter22h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter22,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter22\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":2472,"byte_end":2577,"line_start":150,"line_end":156,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC15,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter21,","highlight_start":1,"highlight_end":18},{"text":"    hpmcounter21h,","highlight_start":1,"highlight_end":19},{"text":"    __read_hpmcounter21,","highlight_start":1,"highlight_end":25},{"text":"    __write_hpmcounter21","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:150:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC15,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m152\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter21,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter21h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter21,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter21\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":2365,"byte_end":2470,"line_start":143,"line_end":149,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC14,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter20,","highlight_start":1,"highlight_end":18},{"text":"    hpmcounter20h,","highlight_start":1,"highlight_end":19},{"text":"    __read_hpmcounter20,","highlight_start":1,"highlight_end":25},{"text":"    __write_hpmcounter20","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:143:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC14,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter20,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m146\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter20h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter20,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter20\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m149\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":2258,"byte_end":2363,"line_start":136,"line_end":142,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC13,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter19,","highlight_start":1,"highlight_end":18},{"text":"    hpmcounter19h,","highlight_start":1,"highlight_end":19},{"text":"    __read_hpmcounter19,","highlight_start":1,"highlight_end":25},{"text":"    __write_hpmcounter19","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:136:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC13,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter19,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m139\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter19h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter19,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter19\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":2151,"byte_end":2256,"line_start":129,"line_end":135,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC12,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter18,","highlight_start":1,"highlight_end":18},{"text":"    hpmcounter18h,","highlight_start":1,"highlight_end":19},{"text":"    __read_hpmcounter18,","highlight_start":1,"highlight_end":25},{"text":"    __write_hpmcounter18","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:129:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC12,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter18,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter18h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter18,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter18\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":2044,"byte_end":2149,"line_start":122,"line_end":128,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC11,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter17,","highlight_start":1,"highlight_end":18},{"text":"    hpmcounter17h,","highlight_start":1,"highlight_end":19},{"text":"    __read_hpmcounter17,","highlight_start":1,"highlight_end":25},{"text":"    __write_hpmcounter17","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:122:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC11,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter17,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter17h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter17,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter17\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":1937,"byte_end":2042,"line_start":115,"line_end":121,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC10,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter16,","highlight_start":1,"highlight_end":18},{"text":"    hpmcounter16h,","highlight_start":1,"highlight_end":19},{"text":"    __read_hpmcounter16,","highlight_start":1,"highlight_end":25},{"text":"    __write_hpmcounter16","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:115:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC10,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter16h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter16\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":1830,"byte_end":1935,"line_start":108,"line_end":114,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC0F,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter15,","highlight_start":1,"highlight_end":18},{"text":"    hpmcounter15h,","highlight_start":1,"highlight_end":19},{"text":"    __read_hpmcounter15,","highlight_start":1,"highlight_end":25},{"text":"    __write_hpmcounter15","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:108:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC0F,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter15,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter15h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter15,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter15\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":1723,"byte_end":1828,"line_start":101,"line_end":107,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC0E,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter14,","highlight_start":1,"highlight_end":18},{"text":"    hpmcounter14h,","highlight_start":1,"highlight_end":19},{"text":"    __read_hpmcounter14,","highlight_start":1,"highlight_end":25},{"text":"    __write_hpmcounter14","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:101:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC0E,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter14,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter14h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter14,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter14\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":1616,"byte_end":1721,"line_start":94,"line_end":100,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC0D,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter13,","highlight_start":1,"highlight_end":18},{"text":"    hpmcounter13h,","highlight_start":1,"highlight_end":19},{"text":"    __read_hpmcounter13,","highlight_start":1,"highlight_end":25},{"text":"    __write_hpmcounter13","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:94:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC0D,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter13,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter13h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter13,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter13\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":1509,"byte_end":1614,"line_start":87,"line_end":93,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC0C,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter12,","highlight_start":1,"highlight_end":18},{"text":"    hpmcounter12h,","highlight_start":1,"highlight_end":19},{"text":"    __read_hpmcounter12,","highlight_start":1,"highlight_end":25},{"text":"    __write_hpmcounter12","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:87:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC0C,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter12,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter12h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter12,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter12\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":1402,"byte_end":1507,"line_start":80,"line_end":86,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC0B,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter11,","highlight_start":1,"highlight_end":18},{"text":"    hpmcounter11h,","highlight_start":1,"highlight_end":19},{"text":"    __read_hpmcounter11,","highlight_start":1,"highlight_end":25},{"text":"    __write_hpmcounter11","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:80:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC0B,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter11,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter11h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter11,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter11\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":1295,"byte_end":1400,"line_start":73,"line_end":79,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC0A,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter10,","highlight_start":1,"highlight_end":18},{"text":"    hpmcounter10h,","highlight_start":1,"highlight_end":19},{"text":"    __read_hpmcounter10,","highlight_start":1,"highlight_end":25},{"text":"    __write_hpmcounter10","highlight_start":1,"highlight_end":25},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:73:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC0A,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter10,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter10h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m77\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter10,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter10\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":1192,"byte_end":1293,"line_start":66,"line_end":72,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC09,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter9,","highlight_start":1,"highlight_end":17},{"text":"    hpmcounter9h,","highlight_start":1,"highlight_end":18},{"text":"    __read_hpmcounter9,","highlight_start":1,"highlight_end":24},{"text":"    __write_hpmcounter9","highlight_start":1,"highlight_end":24},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:66:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC09,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter9,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter9h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter9,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter9\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":1089,"byte_end":1190,"line_start":59,"line_end":65,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC08,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter8,","highlight_start":1,"highlight_end":17},{"text":"    hpmcounter8h,","highlight_start":1,"highlight_end":18},{"text":"    __read_hpmcounter8,","highlight_start":1,"highlight_end":24},{"text":"    __write_hpmcounter8","highlight_start":1,"highlight_end":24},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:59:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC08,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter8h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter8,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter8\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":986,"byte_end":1087,"line_start":52,"line_end":58,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC07,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter7,","highlight_start":1,"highlight_end":17},{"text":"    hpmcounter7h,","highlight_start":1,"highlight_end":18},{"text":"    __read_hpmcounter7,","highlight_start":1,"highlight_end":24},{"text":"    __write_hpmcounter7","highlight_start":1,"highlight_end":24},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:52:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC07,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter7,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter7h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter7,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter7\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":883,"byte_end":984,"line_start":45,"line_end":51,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC06,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter6,","highlight_start":1,"highlight_end":17},{"text":"    hpmcounter6h,","highlight_start":1,"highlight_end":18},{"text":"    __read_hpmcounter6,","highlight_start":1,"highlight_end":24},{"text":"    __write_hpmcounter6","highlight_start":1,"highlight_end":24},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:45:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC06,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter6,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter6h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter6,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter6\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":780,"byte_end":881,"line_start":38,"line_end":44,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC05,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter5,","highlight_start":1,"highlight_end":17},{"text":"    hpmcounter5h,","highlight_start":1,"highlight_end":18},{"text":"    __read_hpmcounter5,","highlight_start":1,"highlight_end":24},{"text":"    __write_hpmcounter5","highlight_start":1,"highlight_end":24},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:38:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC05,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter5,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter5h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter5,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter5\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":677,"byte_end":778,"line_start":31,"line_end":37,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC04,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter4,","highlight_start":1,"highlight_end":17},{"text":"    hpmcounter4h,","highlight_start":1,"highlight_end":18},{"text":"    __read_hpmcounter4,","highlight_start":1,"highlight_end":24},{"text":"    __write_hpmcounter4","highlight_start":1,"highlight_end":24},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:31:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC04,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter4,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter4h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter4,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter4\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":189,"byte_end":222,"line_start":7,"line_end":7,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":574,"byte_end":675,"line_start":24,"line_end":30,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"reg!(","highlight_start":1,"highlight_end":6},{"text":"    0xC03,","highlight_start":1,"highlight_end":11},{"text":"    hpmcounter3,","highlight_start":1,"highlight_end":17},{"text":"    hpmcounter3h,","highlight_start":1,"highlight_end":18},{"text":"    __read_hpmcounter3,","highlight_start":1,"highlight_end":24},{"text":"    __write_hpmcounter3","highlight_start":1,"highlight_end":24},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"reg!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs","byte_start":0,"byte_end":305,"line_start":1,"line_end":11,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! reg {","highlight_start":1,"highlight_end":19},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $addr:expr, $csrl:ident, $csrh:ident, $readf:ident, $writef:ident","highlight_start":1,"highlight_end":74},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        /// Performance-monitoring counter","highlight_start":1,"highlight_end":43},{"text":"        pub mod $csrl {","highlight_start":1,"highlight_end":24},{"text":"            read_csr_as_usize!($addr, $readf);","highlight_start":1,"highlight_end":47},{"text":"            read_composite_csr!(super::$csrh::read(), read());","highlight_start":1,"highlight_end":63},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/hpmcounterx.rs:24:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mreg!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0xC03,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter3,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hpmcounter3h,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __read_hpmcounter3,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    __write_hpmcounter3\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/cycle.rs","byte_start":171,"byte_end":210,"line_start":7,"line_end":7,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"read_csr_as_usize!(0xC00, __read_cycle);","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/cycle.rs:7:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as_usize!(0xC00, __read_cycle);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/fcsr.rs","byte_start":1993,"byte_end":2022,"line_start":103,"line_end":103,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"read_csr!(0x003, __read_fcsr);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/fcsr.rs:103:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr!(0x003, __read_fcsr);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m            core::arch::asm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/utval.rs","byte_start":20,"byte_end":59,"line_start":3,"line_end":3,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"read_csr_as_usize!(0x043, __read_utval);","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/utval.rs:3:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as_usize!(0x043, __read_utval);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/uscratch.rs","byte_start":23,"byte_end":65,"line_start":3,"line_end":3,"column_start":1,"column_end":43,"is_primary":false,"text":[{"text":"read_csr_as_usize!(0x040, __read_uscratch);","highlight_start":1,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/uscratch.rs:3:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as_usize!(0x040, __read_uscratch);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1623,"byte_end":1654,"line_start":61,"line_end":61,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/uip.rs","byte_start":640,"byte_end":676,"line_start":37,"line_end":37,"column_start":1,"column_end":37,"is_primary":false,"text":[{"text":"read_csr_as!(Uip, 0x044, __read_uip);","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1527,"byte_end":1836,"line_start":59,"line_end":71,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as {","highlight_start":1,"highlight_end":27},{"text":"    ($register:ident, $csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":61},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> $register {","highlight_start":1,"highlight_end":37},{"text":"            $register {","highlight_start":1,"highlight_end":24},{"text":"                bits: unsafe { _read() },","highlight_start":1,"highlight_end":42},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/uip.rs:37:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as!(Uip, 0x044, __read_uip);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1923,"byte_end":1954,"line_start":75,"line_end":75,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/uepc.rs","byte_start":19,"byte_end":57,"line_start":3,"line_end":3,"column_start":1,"column_end":39,"is_primary":false,"text":[{"text":"read_csr_as_usize!(0x041, __read_uepc);","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as_usize!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1838,"byte_end":2083,"line_start":73,"line_end":83,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as_usize {","highlight_start":1,"highlight_end":33},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> usize {","highlight_start":1,"highlight_end":33},{"text":"            unsafe { _read() }","highlight_start":1,"highlight_end":31},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/uepc.rs:3:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as_usize!(0x041, __read_uepc);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1623,"byte_end":1654,"line_start":61,"line_end":61,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/ucause.rs","byte_start":257,"byte_end":299,"line_start":17,"line_end":17,"column_start":1,"column_end":43,"is_primary":false,"text":[{"text":"read_csr_as!(Ucause, 0x042, __read_ucause);","highlight_start":1,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1527,"byte_end":1836,"line_start":59,"line_end":71,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as {","highlight_start":1,"highlight_end":27},{"text":"    ($register:ident, $csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":61},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> $register {","highlight_start":1,"highlight_end":37},{"text":"            $register {","highlight_start":1,"highlight_end":24},{"text":"                bits: unsafe { _read() },","highlight_start":1,"highlight_end":42},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/ucause.rs:17:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as!(Ucause, 0x042, __read_ucause);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1623,"byte_end":1654,"line_start":61,"line_end":61,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/utvec.rs","byte_start":679,"byte_end":719,"line_start":33,"line_end":33,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"read_csr_as!(Utvec, 0x005, __read_utvec);","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1527,"byte_end":1836,"line_start":59,"line_end":71,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as {","highlight_start":1,"highlight_end":27},{"text":"    ($register:ident, $csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":61},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> $register {","highlight_start":1,"highlight_end":37},{"text":"            $register {","highlight_start":1,"highlight_end":24},{"text":"                bits: unsafe { _read() },","highlight_start":1,"highlight_end":42},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/utvec.rs:33:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as!(Utvec, 0x005, __read_utvec);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1623,"byte_end":1654,"line_start":61,"line_end":61,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/ustatus.rs","byte_start":462,"byte_end":506,"line_start":26,"line_end":26,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"read_csr_as!(Ustatus, 0x000, __read_ustatus);","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1527,"byte_end":1836,"line_start":59,"line_end":71,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as {","highlight_start":1,"highlight_end":27},{"text":"    ($register:ident, $csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":61},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> $register {","highlight_start":1,"highlight_end":37},{"text":"            $register {","highlight_start":1,"highlight_end":24},{"text":"                bits: unsafe { _read() },","highlight_start":1,"highlight_end":42},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/ustatus.rs:26:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as!(Ustatus, 0x000, __read_ustatus);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `asm` in this scope","code":null,"level":"error","spans":[{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":309,"byte_end":312,"line_start":10,"line_end":10,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1623,"byte_end":1654,"line_start":61,"line_end":61,"column_start":9,"column_end":40,"is_primary":false,"text":[{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/uie.rs","byte_start":637,"byte_end":673,"line_start":37,"line_end":37,"column_start":1,"column_end":37,"is_primary":false,"text":[{"text":"read_csr_as!(Uie, 0x004, __read_uie);","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"read_csr_as!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":1527,"byte_end":1836,"line_start":59,"line_end":71,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr_as {","highlight_start":1,"highlight_end":27},{"text":"    ($register:ident, $csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":61},{"text":"        read_csr!($csr_number, $asm_fn);","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        pub fn read() -> $register {","highlight_start":1,"highlight_end":37},{"text":"            $register {","highlight_start":1,"highlight_end":24},{"text":"                bits: unsafe { _read() },","highlight_start":1,"highlight_end":42},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"read_csr!","def_site_span":{"file_name":"/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs","byte_start":0,"byte_end":756,"line_start":1,"line_end":28,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! read_csr {","highlight_start":1,"highlight_end":24},{"text":"    ($csr_number:expr, $asm_fn: ident) => {","highlight_start":1,"highlight_end":44},{"text":"        /// Reads the CSR","highlight_start":1,"highlight_end":26},{"text":"        #[inline]","highlight_start":1,"highlight_end":18},{"text":"        unsafe fn _read() -> usize {","highlight_start":1,"highlight_end":37},{"text":"            match () {","highlight_start":1,"highlight_end":23},{"text":"                #[cfg(all(riscv, feature = \"inline-asm\"))]","highlight_start":1,"highlight_end":59},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    let r: usize;","highlight_start":1,"highlight_end":34},{"text":"                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);","highlight_start":1,"highlight_end":79},{"text":"                    r","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(all(riscv, not(feature = \"inline-asm\")))]","highlight_start":1,"highlight_end":64},{"text":"                () => {","highlight_start":1,"highlight_end":24},{"text":"                    extern \"C\" {","highlight_start":1,"highlight_end":33},{"text":"                        fn $asm_fn() -> usize;","highlight_start":1,"highlight_end":47},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    $asm_fn()","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[cfg(not(riscv))]","highlight_start":1,"highlight_end":35},{"text":"                () => unimplemented!(),","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this macro:\ncore::arch::asm","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `asm` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/macros.rs:10:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    asm!(\"csrrs {0}, {1}, x0\", out(reg) r, const $csr_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/cola/.cargo/git/checkouts/riscv-d8b7910be325660f/418c105/src/register/uie.rs:37:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mread_csr_as!(Uie, 0x004, __read_uie);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this macro:\u001b[0m\n\u001b[0m           core::arch::asm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `read_csr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to 269 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 269 previous errors\u001b[0m\n\n"}
